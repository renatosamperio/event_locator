#!/bin/bash

## Check for number of days to search
if [ -z "$1" ]
  then
    days_to_search=7
else
    days_to_search=$1
fi

## Checking argument is a number
re='^[0-9]+$'
if ! [[ $days_to_search =~ $re ]] ; then
   echo "error: Not a number [$days_to_search]" >&2; 
   exit 1
fi

# Sourcing ROS environment
export ROS_LOG_DIR=/opt/home_services/data/logs
export HS_HOME=/opt/home_services/src/home_services
source $HS_HOME/devel/setup.bash

## Defining search parameters
export START_DATE=`date +%Y-%m-%d`
export END_DATE=`date -d "$START_DATE+$days_to_search days" +%Y-%m-%d`
export DB_NAME=events
export EL_COLLECTION=concerts
export BS_COLLECTION=bands

## Obtained via: https://api.songkick.com/api/3.0/search/locations.json?query=Zurich
export LOCATION='sk:104761'

source hs_api_keys.bash
echo "Loaded API keys"

## Looking for API key 
if [ -z "$EVENTFUL_API_KEY" ]
then
      echo "\$EVENTFUL_API_KEY is NOT defined"
      echo "    export EVENTFUL_API_KEY="
      exit 1 # terminate and indicate error
fi

## Looking for API key 
if [ -z "$MUSIX_MATCH_API_KEY" ]
then
      echo "\$MUSIX_MATCH_API_KEY is NOT defined"
      echo "    export MUSIX_MATCH_API_KEY="
      exit 1 # terminate and indicate error
fi

## Publishing triggering message
rostopic pub /event_locator/weekly_search events_msgs/WeeklySearch "{start_date: '$START_DATE', end_date: '$END_DATE', location: '$LOCATION', sk_api_key: '$EVENTFUL_API_KEY', mm_api_key: '$MUSIX_MATCH_API_KEY', database: '$DB_NAME', el_collection: '$EL_COLLECTION', bs_collection: '$BS_COLLECTION'}" -1;
